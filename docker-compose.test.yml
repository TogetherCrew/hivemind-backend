version: "3.9"

services:
  app:
    build:
      context: .
      target: test
      dockerfile: Dockerfile
    environment:
      - PORT=3000
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USER=root
      - RABBIT_PASSWORD=pass
      - NEO4J_DB=neo4j
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASS=pass
      - POSTGRES_PORT=5432
      - SENTRY_DSN=sample_dsn
      - SENTRY_ENV=local
    networks:
      - python_service_network
    volumes:
      - ./coverage:/project/coverage
    depends_on:
      mongo:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      rabbitmq: 
        condition: service_healthy
  postgres:
    image: "ankane/pgvector"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=pass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - python_service_network

networks:
  python_service_network:
    driver: bridge